<div class="row">
  <div class="col-lg-12">
    <h3 class="page-header">抓取附近 </h3>
    <!--TODO Task1-->
    <!--将房屋信息移植到这里显示，去掉当前房屋信息Panel-->
    <!--END-->
  </div>
</div>

<div class="row">
    <div class = "col-md-12">
        <div class="panel panel-default">
            <div class="panel-heading">
            数据总览
            </div>
            <div class="panel-body">
                <table class="table table-striped">
                    <tr>
                        <td>房源总数：</td>
                        <td><%=@total%> </td>
                        <td>已经爬取房源：</td>
                        <td><%=@house_success_total%></td>
                        <td>当前房源异常：</td>
                        <td>
                            <% if not @houses_error  %>
                            <%= 0%>
                            <% else %>
                            <%= @houses_error.size%>
                            <% end%>
                        </td>
                    </tr>
                    
                    <tr>
                        <td><h4>共爬取：</h4>
                        </td>
                        <td></td>
                        <td></td>
                        <td></td>
                        <td></td>
                        <td></td>
                    </tr>
                    <tr>
                        <td>公交车站：</td>
                        <td><%=@bus_total%></td>
                        <td>医院：</td>
                        <td><%=@hospital_total%></td>
                        <td>学校：</td>
                        <td><%=@school_total%></td>
                    </tr>
                    <tr>
                        <td>商场：</td>
                        <td><%=@shop_total%></td>
                        <td>地铁：</td>
                        <td><%=@subway_total%></td>
                        <td>办公：</td>
                        <td><%=@work_total%></td>
                    </tr>
                    <tr>
                        <td>公交关联信息</td>
                        <td><%=@bus_house_total%></td>
                        <td>医院关联信息</td>
                        <td><%=@hospital_house_total%></td>
                        <td>学校关联信息</td>
                        <td><%=@school_house_total%></td>
                    </tr>
                    <tr>
                        <td>商场关联信息</td>
                        <td><%=@shop_house_total%></td>
                        <td>地铁关联信息</td>
                        <td><%=@subway_house_total%></td>
                        <td>办公楼关联信息</td>
                        <td><%=@work_house_total%></td>
                    </tr>
                                                                                                
                </table>
                <% if @houses_error %>
                <table>
                <hr>
                <h3>爬取异常的房源</h3>
                <table class="table table-hover">
                    <thead>
                        <tr>
                            <th>ID</th>
                            <th>小区名</th>
                            <!--<th>街道</th>-->

                        </tr>
                    </thead>
                    <tbody>
                    
                    <% @houses_error.each do |house| %>
                        <tr>
                            <td><text style="font-size: small"><%= house.id %></text>
                            </td>
                            <td>
                            <%= link_to "#{house.community}", house_path(house), method: :get %>
                            </td>

                        </tr>

                        
                    <% end %>
                    </tbody>
                    
                </table>    
                <%end%>
               
            </div>
        </div>
    </div>
</div>

<div class="row">
    <div class = "col-md-12">
        <div class="panel panel-default">
            <div class="panel-heading">
            抓取周边数据
            </div>
            <div class="panel-body">
                <%# <div class="col-md-8"> %>
                    <div class="row">
                    <div class="progress">
                        <div id="progress-bar" class="progress-bar progress-bar-striped active" role="progressbar" aria-valuenow="0" aria-valuemin="0" aria-valuemax="100" style="width: 0%">
                            <span id="progress-text" class="sr-only">已完成 0% </span>
                        </div>
                    </div>
                    </div>
                <%# </div> %>
                <%# <div class="col-md-4"> %>
                    <div class="row">
                    <div class="col-md-4">
                        <div class="btn-group btn-group-justified">
                            <a class="btn btn-success btn-sm " onclick="flag = false;GetDataFromServer();">开始</a>   
                            <a class="btn btn-default btn-sm " onclick="flag = true;">暂停</a>  
                        </div>
                    </div>
                
                    </div>
                <%# </div> %>
            </div>
        </div>
    </div>
</div>
    


<div class="row">
  <div class="col-sm-4">

    <!--TODO Task2-->
    <!--增加进度条，实时显示抓取的进度-->
    <!--END-->

    <div class="panel panel-default">
      <div class="panel-heading">
        当前房屋信息:
      </div>
      <div class="panel-body">
        <table>
          <tr>
            <td style="width: 20%">ID:</td>
            <td id="id"></td>
          </tr>
          <tr>
            <td style="width: 20%">小区:</td>
            <td id="community"></td>
          </tr>
          <tr>
            <td style="width: 20%">地址:</td>
            <td id="street"></td>
          </tr>
        </table>
      </div>
    </div>

    <!--TODO Task3-->
    <!--分抓取的类别实时返回周边数据，现在是所有的数据都在一个panel显示-->
    <!--提示：增加多个panel，每一个panel显示一类数据，比如bus_panel里显示抓取的bus信息-->
    <!--END-->

    <div class="panel panel-default">
      <div class="panel-heading">
        实时返回周边数据

      </div>
      <div class="panel-body">
        <table id="result" class="table table-responsive table-condensed table-hover">
          <thead>
          <tr>
            <th>ID</th>
            <th>地点名</th>
            <th>直线距离</th>
          </tr>
          </thead>
          <tbody style="font-size: small">
          </tbody>
        </table>
      </div>
    </div>

  </div>

  <div class="col-sm-8">
    <div class="panel panel-default">
      <div class="panel-heading">
        百度地图API
        <div class="pull-right">
          <button class="btn btn-success btn-sm " onclick="flag = false;GetDataFromServer();">开始</button>   
          <button class="btn btn-default btn-sm " onclick="flag = true;">暂停</button>  
                    
        
          </div>
      </div>
      <div class="panel-body">
        <div id="l-map" style="height: 500px;width: 100%">
        </div>
      </div>
    </div>
  </div>

</div>

<script type="text/javascript">
    $(document).ready(function(){
        $('#progress-bar').attr("style","width:" + <%=@current_spider_id%>/total*100 +"%;")
    $('#progress-text').html("已完成 "+<%=@current_spider_id%>/total*100+"%")
    })
    
    var get_data_url = "<%=return_next_spiders_path%>";
    var post_data_url = "<%=spiders_path%>";
    var total = <%=@total%>
    var timeInterval = 100;
    var flag = false;
    var search_range = 1000;

    // 两个数组的顺序不能错
    var keywords_en = ["bus", "shop", "school", "subway", "work", "hospital"];
    var keywords = ["公交车站", "购物", "学校", "地铁站", "写字楼", "医院"];

    var map = new BMap.Map("l-map");
    // 初始化map坐标为北京,11为比例尺
    map.centerAndZoom(new BMap.Point(116.404, 39.915), 11);
    map.enableScrollWheelZoom(true);
    var myGeo = new BMap.Geocoder();

    //  var circle = new BMap.Circle(new BMap.Point(116.404, 39.915), search_range, {
    //    fillColor: "blue",
    //    strokeWeight: 1,
    //    fillOpacity: 0.1,
    //    strokeOpacity: 0.3
    //  });
    //  map.addOverlay(circle);

    function displayHouseData(data) {
        $('#id').html(data.id);
        $('#community').html(data.community);
        $('#street').html(data.street);
    }

    function DisplayClear() {
        $('#result tbody tr').remove();
    }

    function DisplayNearbyData(nearby_info, locate, distance) {
        // id, title, distance
        $('#result tbody').append("<tr><td>" + nearby_info.length + "</td><td>" + locate.title + "</td><td>" + distance + "</td></tr>");
    }

    function ShowSpiderProgress(data){
        $('#progress-bar').attr("style","width:" + data.id/total*100 +"%;")
        $('#progress-text').html("已完成 "+data.id/total*100+"%")
    }

    function GetDataFromServer() {
        $.ajax({
            type: "GET",
            url: get_data_url,
            dataType: 'json',
            success: function (house_data) {
                if(house_data.hasOwnProperty("status")){
                    $('#progress-bar').attr("style","width:100%;")
                    $('#progress-text').html("抓取完成")
                    alert('抓取完毕');
                }else{
                // 拿到房屋数据后先显示出来
                    displayHouseData(house_data);
                    ShowSpiderProgress(house_data);

                    // 然后先用街道去查坐标
                    myGeo.getPoint(house_data.street, function (point) {
                        if (point) {
                            // 如果查到坐标，开始检索周围信息
                            console.log("找到房屋坐标:"+point.lng+";"+point.lat)
                            SearchStart(point, house_data);
                        } else {
                            console.log("第一次未找到"+house_data.street)
                            
                            
                            // 如果街道没查搭配，再用小区去查坐标
                            myGeo.getPoint(house_data.community, function (repoint) {
                                if (repoint) {
                                    // 如果查到坐标，开始检索周围信息
                                    console.log("第二次找到房屋坐标：")
                                    SearchStart(repoint, house_data)
                                } else {
                                    setTimeout(function () {
                                        console.log("Error: no address of " + " id: " + house_data.id + " community: " + house_data.community + " street: " + house_data.street);
                                        sendNoFound(house_data);
                                        // 如果还没查到坐标，继续查询下一个房屋，延迟timeInterval秒
                                        GetDataFromServer();
                                    }, timeInterval);
                                }
                            }, "北京市");
                        }
                    }, "北京市");
                }
            },
            error: function () {
                alert('error');
            },
            timeout: function () {
                alert('time out')
            }
        });
    }


    function SearchStart(point, house_data) {
        // 先在地图上标记出来
        map.centerAndZoom(point, 16);
        map.addOverlay(new BMap.Marker(point));

        // 首先查询此房屋的第一个关键词信息（公交车站，idx＝0）
        setTimeout(function () {
            SearchNearby(point, house_data, 0);
        }, timeInterval);

    }

    function SearchNearby(house_loc, house_data, keyword_idx) {
        var nearby_info = [];
        // 清除地图覆盖物
        map.clearOverlays();
        var local = new BMap.LocalSearch(map, {
            renderOptions: {map: map, autoViewport: false},
            pageCapacity: 50,
            onSearchComplete: function (results) {
                DisplayClear();
                if (local.getStatus() == BMAP_STATUS_SUCCESS) {
                    // 百度地图成功返回，将每个周边信息储存到nearby_info里
                    for (var i = 0; i < results.getCurrentNumPois(); i++) {
                        var locate = results.getPoi(i);
                        if (locate != null) {
                            // 查询结果与房屋的距离
                            var distance = parseFloat(map.getDistance(locate.point, house_loc)).toFixed(1);
                            nearby_info.push(locate.title + "/" + locate.point.lng + '/' + locate.point.lat + '/' + distance);
                            DisplayNearbyData(nearby_info, locate, distance)
                        }
                    }
                    // 获得百度地图查询结果后立即发送给服务器
                    return sendData(keywords_en[keyword_idx], nearby_info, house_data, house_loc, keyword_idx)
                } else {
                    GetDataFromServer();
                    console.log("No records with baiduAPI:", local.getStatus());
                    sendNoFound(house_data);
                    return false;
                }
            }
        });
        local.searchNearby(keywords[keyword_idx], house_loc, search_range);
    }

    function sendData(nearby_type, nearby_info, house_data, house_loc, idx) {
        data = "nearby_type=" + nearby_type + "&nearby_info=" + nearby_info + "&id=" + house_data.id + "&lat=" + house_loc.lat + "&lng=" + house_loc.lng + "&type=1" ;
        $.ajax({
            type: "POST",
            url: post_data_url,
            data: data,
            dataType: "JSON",
            success: function (data) {
                if (flag) {
                    console.log("warning", 'pause');
                } else {
                    // 当查询到最后一个kewords时，请求服务器获得下一个房屋信息
                    if (idx == keywords.length - 1) {
                        GetDataFromServer();
                    } else {
                        // 查询此房屋的下一个关键词信息
                        setTimeout(function () {
                            SearchNearby(house_loc, house_data, idx + 1);
                        }, timeInterval);
                    }
                    console.log("success", data);
                }
                return true;
            },
            error: function () {
                alert('error in post');
                return false;
            },
            timeout: function () {
                alert('time out in post');
                return false;
            }
        });
    }

    function sendNoFound(house_data){
        data = "id=" + house_data.id + "type=2";
         $.ajax({
            type: "POST",
            url: post_data_url,
            data: data,
            dataType: "JSON",
            success: function (){
                
            },
            error: function () {
                alert('error in post no found');
                return false;
            },
            timeout: function () {
                alert('time out in post no found');
                return false;
            }
         });
    }

</script>
